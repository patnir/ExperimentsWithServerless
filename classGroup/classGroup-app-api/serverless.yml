# NOTE: update this with your service name
service: classGroup-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  createGroup:
    handler: createGroup.main
    events:
      - http:
          path: createGroup
          method: post
          cors: true
          authorizer: aws_iam
  getGroup:
    handler: getGroup.main
    events:
      - http:
          path: group/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listGroups:
    handler: listGroups.main
    events:
      - http:
          path: groups
          method: get
          cors: true
          authorizer: aws_iam
  updateGroup:
    handler: updateGroup.main
    events:
      - http:
          path: groups/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteGroup: 
    handler: deleteGroup.main
    events:
      - http:
          path: groups/{id}
          method: delete
          cors: true
          authorizer: aws_iam

